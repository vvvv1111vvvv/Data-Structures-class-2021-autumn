'''
작성자 : 박수영 2018930012 07mak8mgt@office.uos.ac.kr
작성일 : 2021.11.25

1. 목적: 가중치그래프의 개념과 용어를 이해하고, 활용하는 방법에 대해 실습한다.
2. 문제 : 실습 11.1: 11.2절의 인접리스트에서의 모든간선 출력함수에서 그래프의 간선들이 중복되어 출력되지 않으려면 어떻게 할끼?
            츨력함수를 수정하라.
3. 방법 : 11.2절의 함수와 테스트 코드를 응용한다.

알고리즘
#1. 딕셔너리와 집합, 튜플, 리스트를 모두 이용해 그래프를 표현한다.
#2. 전체간선을 출력하는 함수 printALLedges()를 호출한다. 호출인자: 인접리스트 그래프
    #2-1. 중복 간선 제외를 위한 집합 a를 선언
    #2-2. 그래프의 모든 정점 v와 간선 e에 대해 정점의 v의 값을 elem1에 저장, 정점 e[0]의 값을 elem2에 저장
        #2-2-1.만약 elem1 > emel2 이면 교환한 뒤 집합에 튜플을 추가
    #2-3. for문 종료 후 집합에 저장된 간선 튜플을 출력
'''
def printALLedges(graph):
    '''
    목적 : 인접리스트 그래프의 간선을 중복없이 출력하는 함수
    입력 : 인접리스트 그래프
    출력 : 간선
    '''
    a=set()                 #중복 간선 제외를 위한 집합
    for v in graph:         #그래프의 모든 정점 v에 대해: 'A', 'B', ...
        for e in graph[v]:  #그래프의 모든 간선 e에 대해: ('B',29),('F',10), ...
            elem1=v         #정점의 v의 값을 elem1에 저장
            elem2=e[0]      #정점 e[0]의 값을 elem2에 저장
            if elem1> elem2:    #만약 elem1 > elem2 이면
                elem1,elem2=elem2,elem1 # 교환
            a.add((elem1,elem2,e[1]))   #집합에 튜플을 추가
    print(a)                            #for문 종료 후 집합에 저장된 간선 튜플을 출력

#딕셔너리와 집합, 튜플, 리스트를 모두 이용한 그래프 표현
graphA={'A': {('B',29),('F',10)     },
        'B': {('A',29),('C',16),('G',15)},
        'C': {('B',16),('D',12)},
        'D': {('C',12),('E',22),('G',18)},
        'E': {('D',22),('F',27),('G',25)},
        'F': {('A',10),('E',27)},
        'G': {("B",15),('D',18),('E',25)} }
printALLedges(graphA)